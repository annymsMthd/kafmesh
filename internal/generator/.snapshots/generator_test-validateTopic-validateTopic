// Code generated by kafmesh-gen. DO NOT EDIT.

package kafmesh

import (
	"context"
	"time"

	"github.com/syncromatics/kafmesh/pkg/runner"
)

func ConfigureTopics(ctx context.Context, brokers []string) error {
	topics := []runner.Topic{}

	topic := runner.Topic{}

	maxBytes := 0
	topic = runner.Topic{
		Name:       "externalTopic",
		Partitions: 0,
		Replicas:   0,
		Compact:    false,
		Retention:  0 * time.Millisecond,
		Segment:    0 * time.Millisecond,
		Create:     false,
	}
	topics = append(topics, topic)
	
	topic = runner.Topic{
		Name:       "testMesh.details.enricher-table",
		Partitions: 10,
		Replicas:   1,
		Compact:    true,
		Retention:  86400000 * time.Millisecond,
		Segment:    43200000 * time.Millisecond,
		Create:     true,
	}
	maxBytes = 45235423
	topic.MaxMessageBytes = &maxBytes
	topics = append(topics, topic)
	
	topic = runner.Topic{
		Name:       "testMesh.testId.test",
		Partitions: 10,
		Replicas:   1,
		Compact:    true,
		Retention:  86400000 * time.Millisecond,
		Segment:    43200000 * time.Millisecond,
		Create:     true,
	}
	maxBytes = 45235423
	topic.MaxMessageBytes = &maxBytes
	topics = append(topics, topic)
	
	topic = runner.Topic{
		Name:       "testMesh.testId.test2",
		Partitions: 0,
		Replicas:   0,
		Compact:    false,
		Retention:  0 * time.Millisecond,
		Segment:    0 * time.Millisecond,
		Create:     false,
	}
	topics = append(topics, topic)
	
	topic = runner.Topic{
		Name:       "testMesh.testSerial.details",
		Partitions: 10,
		Replicas:   1,
		Compact:    false,
		Retention:  86400000 * time.Millisecond,
		Segment:    43200000 * time.Millisecond,
		Create:     true,
	}
	maxBytes = 45235423
	topic.MaxMessageBytes = &maxBytes
	topics = append(topics, topic)
	
	topic = runner.Topic{
		Name:       "testMesh.testSerial.detailsEnriched",
		Partitions: 80,
		Replicas:   90,
		Compact:    false,
		Retention:  86400000 * time.Millisecond,
		Segment:    43200000 * time.Millisecond,
		Create:     true,
	}
	maxBytes = 992342
	topic.MaxMessageBytes = &maxBytes
	topics = append(topics, topic)
	

	return runner.ConfigureTopics(ctx, brokers, topics)
}

